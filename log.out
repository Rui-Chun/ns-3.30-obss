Waf: Entering directory `/home/jw27/Documents/ns-3.30-obss/build'
[1857/1906] Compiling scratch/simple-ofdma.cc
[1866/1906] Linking build/scratch/simple-ofdma
Waf: Leaving directory `/home/jw27/Documents/ns-3.30-obss/build'
Build commands will be stored in build/compile_commands.json
'build' finished successfully (2.990s)
+0.000000000s -1 [mac=00:00:00:00:00:00] MacLow:MacLow(0x56128457ff10)
+0.000000000s -1 WifiPhy:WifiPhy(0x5612845c45b0)
+0.000000000s -1 WifiPhy:SetFrequency(0x5612845c45b0, 0)
+0.000000000s -1 WifiPhy:SetFrequency(): Saving frequency configuration for initialization
+0.000000000s -1 WifiPhy:SetChannelWidth(0x5612845c45b0, 20)
+0.000000000s -1 WifiPhy:AddSupportedChannelWidth(0x5612845c45b0, 20)
+0.000000000s -1 WifiPhy:AddSupportedChannelWidth("Adding ", 20, " to supported channel width set")
+0.000000000s -1 WifiPhy:SetChannelNumber(0x5612845c45b0, 36)
+0.000000000s -1 WifiPhy:SetChannelNumber(): Saving channel number configuration for initialization
+0.000000000s -1 WifiPhy:SetRxSensitivity(0x5612845c45b0, -101)
+0.000000000s -1 WifiPhy:SetRxSensitivity(0x5612845c45b0, -101)
+0.000000000s -1 WifiPhy:SetCcaEdThreshold(0x5612845c45b0, -62)
+0.000000000s -1 WifiPhy:SetTxGain(0x5612845c45b0, 0)
+0.000000000s -1 WifiPhy:SetRxGain(0x5612845c45b0, 0)
+0.000000000s -1 WifiPhy:SetTxPowerEnd(0x5612845c45b0, 16.0206)
+0.000000000s -1 WifiPhy:SetTxPowerStart(0x5612845c45b0, 16.0206)
+0.000000000s -1 WifiPhy:SetRxNoiseFigure(0x5612845c45b0, 7)
+0.000000000s -1 WifiPhy:ConfigureHtDeviceMcsSet(0x5612845c45b0)
+0.000000000s -1 WifiPhy:SetShortGuardInterval(0x5612845c45b0, 0)
+0.000000000s -1 WifiPhy:SetGuardInterval(0x5612845c45b0, +3200.0ns)
+0.000000000s -1 WifiPhy:SetGreenfield(0x5612845c45b0, 0)
+0.000000000s -1 WifiPhy:SetShortPlcpPreambleSupported(0x5612845c45b0, 0)
+0.000000000s -1 [mac=00:00:00:00:00:01] MacLow:SetMsduAggregator(0x56128457ff10, 0x56128457d710)
+0.000000000s -1 [mac=00:00:00:00:00:01] MacLow:SetMpduAggregator(0x56128457ff10, 0x5612845a6810)
+0.000000000s -1 WifiPhy:ConfigureStandard(0x5612845c45b0, 10)
+0.000000000s -1 WifiPhy:InitializeFrequencyChannelNumber(0x5612845c45b0)
+0.000000000s -1 WifiPhy:SetChannelNumber(0x5612845c45b0, 36)
+0.000000000s -1 WifiPhy:DoChannelSwitch(): initialize to channel 36
+0.000000000s -1 WifiPhy:SetChannelNumber(): Setting frequency to 5180; width to 20
+0.000000000s -1 WifiPhy:SetChannelWidth(0x5612845c45b0, 20)
+0.000000000s -1 WifiPhy:AddSupportedChannelWidth(0x5612845c45b0, 20)
+0.000000000s -1 WifiPhy:ConfigureChannelForStandard(0x5612845c45b0, 10)
+0.000000000s -1 WifiPhy:ConfigureChannelForStandard(): Frequency set; checking whether a channel number corresponds
+0.000000000s -1 WifiPhy:FindChannelNumberForFrequencyWidth(0x5612845c45b0, 5180, 20)
+0.000000000s -1 WifiPhy:FindChannelNumberForFrequencyWidth(): Found, returning 36
+0.000000000s -1 WifiPhy:ConfigureChannelForStandard(): Channel number found; setting to 36
+0.000000000s -1 WifiPhy:SetChannelNumber(0x5612845c45b0, 36)
+0.000000000s -1 WifiPhy:SetChannelNumber(): No channel change requested
+0.000000000s -1 WifiPhy:Configure80211ax(0x5612845c45b0)
+0.000000000s -1 WifiPhy:Configure80211ac(0x5612845c45b0)
+0.000000000s -1 WifiPhy:Configure80211n(0x5612845c45b0)
+0.000000000s -1 WifiPhy:Configure80211a(0x5612845c45b0)
+0.000000000s -1 WifiPhy:ConfigureHtDeviceMcsSet(0x5612845c45b0)
+0.000000000s -1 [mac=00:00:00:00:00:00] MacLow:MacLow(0x561284585040)
+0.000000000s -1 WifiPhy:WifiPhy(0x561284588c70)
+0.000000000s -1 WifiPhy:SetFrequency(0x561284588c70, 0)
+0.000000000s -1 WifiPhy:SetFrequency(): Saving frequency configuration for initialization
+0.000000000s -1 WifiPhy:SetChannelWidth(0x561284588c70, 20)
+0.000000000s -1 WifiPhy:AddSupportedChannelWidth(0x561284588c70, 20)
+0.000000000s -1 WifiPhy:AddSupportedChannelWidth("Adding ", 20, " to supported channel width set")
+0.000000000s -1 WifiPhy:SetChannelNumber(0x561284588c70, 36)
+0.000000000s -1 WifiPhy:SetChannelNumber(): Saving channel number configuration for initialization
+0.000000000s -1 WifiPhy:SetRxSensitivity(0x561284588c70, -101)
+0.000000000s -1 WifiPhy:SetRxSensitivity(0x561284588c70, -101)
+0.000000000s -1 WifiPhy:SetCcaEdThreshold(0x561284588c70, -62)
+0.000000000s -1 WifiPhy:SetTxGain(0x561284588c70, 0)
+0.000000000s -1 WifiPhy:SetRxGain(0x561284588c70, 0)
+0.000000000s -1 WifiPhy:SetTxPowerEnd(0x561284588c70, 16.0206)
+0.000000000s -1 WifiPhy:SetTxPowerStart(0x561284588c70, 16.0206)
+0.000000000s -1 WifiPhy:SetRxNoiseFigure(0x561284588c70, 7)
+0.000000000s -1 WifiPhy:ConfigureHtDeviceMcsSet(0x561284588c70)
+0.000000000s -1 WifiPhy:SetShortGuardInterval(0x561284588c70, 0)
+0.000000000s -1 WifiPhy:SetGuardInterval(0x561284588c70, +3200.0ns)
+0.000000000s -1 WifiPhy:SetGreenfield(0x561284588c70, 0)
+0.000000000s -1 WifiPhy:SetShortPlcpPreambleSupported(0x561284588c70, 0)
+0.000000000s -1 [mac=00:00:00:00:00:02] MacLow:SetMsduAggregator(0x561284585040, 0x56128457c230)
+0.000000000s -1 [mac=00:00:00:00:00:02] MacLow:SetMpduAggregator(0x561284585040, 0x561284584b50)
+0.000000000s -1 WifiPhy:ConfigureStandard(0x561284588c70, 10)
+0.000000000s -1 WifiPhy:InitializeFrequencyChannelNumber(0x561284588c70)
+0.000000000s -1 WifiPhy:SetChannelNumber(0x561284588c70, 36)
+0.000000000s -1 WifiPhy:DoChannelSwitch(): initialize to channel 36
+0.000000000s -1 WifiPhy:SetChannelNumber(): Setting frequency to 5180; width to 20
+0.000000000s -1 WifiPhy:SetChannelWidth(0x561284588c70, 20)
+0.000000000s -1 WifiPhy:AddSupportedChannelWidth(0x561284588c70, 20)
+0.000000000s -1 WifiPhy:ConfigureChannelForStandard(0x561284588c70, 10)
+0.000000000s -1 WifiPhy:ConfigureChannelForStandard(): Frequency set; checking whether a channel number corresponds
+0.000000000s -1 WifiPhy:FindChannelNumberForFrequencyWidth(0x561284588c70, 5180, 20)
+0.000000000s -1 WifiPhy:FindChannelNumberForFrequencyWidth(): Found, returning 36
+0.000000000s -1 WifiPhy:ConfigureChannelForStandard(): Channel number found; setting to 36
+0.000000000s -1 WifiPhy:SetChannelNumber(0x561284588c70, 36)
+0.000000000s -1 WifiPhy:SetChannelNumber(): No channel change requested
+0.000000000s -1 WifiPhy:Configure80211ax(0x561284588c70)
+0.000000000s -1 WifiPhy:Configure80211ac(0x561284588c70)
+0.000000000s -1 WifiPhy:Configure80211n(0x561284588c70)
+0.000000000s -1 WifiPhy:Configure80211a(0x561284588c70)
+0.000000000s -1 WifiPhy:ConfigureHtDeviceMcsSet(0x561284588c70)
+0.000000000s 0 WifiPhy:DoInitialize(0x5612845c45b0)
+0.000000000s 0 WifiPhy:DoInitialize(): Frequency already initialized
+0.000000000s 1 WifiPhy:DoInitialize(0x561284588c70)
+0.000000000s 1 WifiPhy:DoInitialize(): Frequency already initialized
+0.004929000s 0 WifiPhy:NotifyChannelAccessRequested(0x5612845c45b0)
+0.004929000s 0 [mac=00:00:00:00:00:01] MacLow:StartTransmission(0x56128457ff10, size=165, to=ff:ff:ff:ff:ff:ff, seqN=0, lifetime=0us, [send rts=0, next size=0, ack=none], 0x5612845832a0)
+0.004929000s 0 [mac=00:00:00:00:00:01] MacLow:CancelAllEvents(0x56128457ff10)
+0.004929000s 0 [mac=00:00:00:00:00:01] MacLow:SendDlMuRts(0x56128457ff10)
msg="WifiTxVector mode must be set before using", file=../src/wifi/model/wifi-tx-vector.cc, line=81
terminate called without an active exception
Command ['/home/jw27/Documents/ns-3.30-obss/build/scratch/simple-ofdma', '--ofdmaEnabled=true'] terminated with signal SIGIOT. Run it under a debugger to get more information (./waf --run <program> --command-template="gdb --args %s <args>").
